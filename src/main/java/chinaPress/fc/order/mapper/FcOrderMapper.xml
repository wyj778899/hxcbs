<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chinaPress.fc.order.dao.FcOrderMapper">
  <resultMap id="BaseResultMap" type="chinaPress.fc.order.model.FcOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="role_type" jdbcType="INTEGER" property="roleType" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="is_coupon" jdbcType="INTEGER" property="isCoupon" />
    <result column="coupon_id" jdbcType="INTEGER" property="couponId" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_individual" jdbcType="INTEGER" property="isIndividual" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="discount_amount" jdbcType="DECIMAL" property="discountAmount" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `date`, code, role_type, role_id, course_id, start_time, end_time, is_coupon, 
    coupon_id, pay_status, `state`, create_id, create_time, update_id, update_time, is_individual,
    order_amount, discount_amount, pay_amount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fc_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="chinaPress.fc.order.model.FcOrder"
  	useGeneratedKeys="true" keyProperty="id">
    insert into fc_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="isCoupon != null">
        is_coupon,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isIndividual != null">
      	is_individual,
      </if>
      <if test="orderAmount != null">
      	order_amount,
      </if>
      <if test="discountAmount != null">
      	discount_amount,
      </if>
      <if test="payAmount != null">
      	pay_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCoupon != null">
        #{isCoupon,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isIndividual != null">
      	#{isIndividual},
      </if>
      <if test="orderAmount != null">
      	#{orderAmount},
      </if>
      <if test="discountAmount != null">
      	#{discountAmount},
      </if>
      <if test="payAmount != null">
      	#{payAmount},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="chinaPress.fc.order.model.FcOrder">
    update fc_order
    <set>
      <if test="date != null">
        `date` = #{date,jdbcType=DATE},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCoupon != null">
        is_coupon = #{isCoupon,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isIndividual != null">
      	is_individual = #{isIndividual},
      </if>
      <if test="orderAmount != null">
      	order_amount = #{orderAmount},
      </if>
      <if test="discountAmount != null">
      	discount_amount = #{discountAmount},
      </if>
      <if test="payAmount != null">
      	pay_amount = #{payAmount},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 终端 我的订单数据数量 -->
  <select id="findTerminalOrderCount" resultType="int"
  	parameterType="chinaPress.fc.order.vo.TerminalOrderListParam">
  	SELECT
		count(*)
	FROM
		fc_order a
		LEFT JOIN fc_course_archives b ON b.id = a.course_id 
	<where>
		<if test="roleId != null">AND a.role_id = #{roleId} </if>
		<if test="roleType != null">AND a.role_type = #{roleType} </if>
		<if test="courseName != null and courseName != ''">AND b.`name` LIKE CONCAT('%', #{courseName}, '%')</if>
	</where>
  </select>
  
  <!-- 终端 我的订单数据集合 -->
  <select id="findTerminalOrderList" resultType="chinaPress.fc.order.vo.TerminalOrderListVo"
  	parameterType="chinaPress.fc.order.vo.TerminalOrderListParam">
  	SELECT
		a.id AS id,
		a.date,
		a.`code`,
		b.`name` AS courseName,
		b.course_price AS coursePrice,
		a.pay_status AS payStatus 
	FROM
		fc_order a
		LEFT JOIN fc_course_archives b ON b.id = a.course_id 
	<where>
		<if test="roleId != null">AND a.role_id = #{roleId} </if>
		<if test="roleType != null">AND a.role_type = #{roleType} </if>
		<if test="courseName != null and courseName != ''">AND b.`name` LIKE CONCAT('%', #{courseName}, '%')</if>
	</where>
	ORDER BY a.date DESC
	<if test="pageNumber != null and pageSize != null">LIMIT #{offSet}, #{pageSize}</if>
  </select>
  
  <resultMap type="chinaPress.fc.order.vo.TerminalInstitutionOrderDetailVo" id="InstitutionOrderDetailResultMap">
  	<id column="a_id" jdbcType="INTEGER" property="id" />
    <result column="a_code" jdbcType="VARCHAR" property="code" />
    <result column="a_course_id" jdbcType="INTEGER" property="courseId" />
    <result column="a_pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="a_start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="a_end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="c_name" jdbcType="VARCHAR" property="courseName" />
  </resultMap>
  
  <!-- 终端 机构我的订单详情 -->
  <select id="findTerminalInstitutionOrderDetail" resultMap="InstitutionOrderDetailResultMap">
  	SELECT
		a.id AS a_id,
		a.course_id AS a_course_id,
		a.`code` AS a_code,
		a.pay_status AS a_pay_status,
		a.start_time AS a_start_time,
		a.end_time AS a_end_time,
		c.`name` AS c_name
	FROM
		fc_order a
		LEFT JOIN fc_course_archives c ON c.id = a.course_id
	WHERE a.id = #{id}
  </select>
  
  <!-- 终端家长 课程数据数量 -->
  <select id="findTerminalPractitionerCourseCount" resultType="int"
  	parameterType="chinaPress.fc.order.vo.TerminalPractitionerOrderCourseListParam">
  	SELECT COUNT(*) FROM (
  		SELECT
			c.id,
			c.`name`,
			a.start_time AS startTime,
			a.end_time AS endTime,
			c.course_price AS coursePrice,
			b.total_count AS totalCount,
			b.have_count haveCount,
			IF( b.total_count = b.have_count, 1, 2 ) AS `status` 
		FROM
			fc_order a
			INNER JOIN fc_order_person b ON b.order_id = a.id
			INNER JOIN fc_course_archives c ON c.id = a.course_id 
		WHERE
			b.is_individual = 1 
			<if test="roleId != null">AND b.role_id = #{roleId} </if>
			<if test="roleType != null">AND b.role_type = #{roleType} </if>
			<if test="courseName != null and courseName != ''">AND c.`name` LIKE CONCAT('%', #{courseName}, '%')</if>
  	) AS parent_table
  	<where>
  		<if test="status != null">AND parent_table.`status` = #{status}</if>
  	</where>
  </select>
  
  <!-- 终端家长 课程数据集合 -->
  <select id="findTerminalPractitionerCourseList" resultType="chinaPress.fc.order.vo.TerminalPractitionerOrderCourseListVo"
  	parameterType="chinaPress.fc.order.vo.TerminalPractitionerOrderCourseListParam">
  	SELECT
		c.id,
		c.`name`,
		a.start_time AS startTime,
		a.end_time AS endTime,
		c.course_price AS coursePrice,
		b.total_count AS totalCount,
		b.have_count haveCount,
		IF( b.total_count = b.have_count, 1, 2 ) AS `status` 
	FROM
		fc_order a
		INNER JOIN fc_order_person b ON b.order_id = a.id
		INNER JOIN fc_course_archives c ON c.id = a.course_id 
	WHERE
		b.is_individual = 1 
		<if test="roleId != null">AND b.role_id = #{roleId} </if>
		<if test="roleType != null">AND b.role_type = #{roleType} </if>
		<if test="courseName != null and courseName != ''">AND c.`name` LIKE CONCAT('%', #{courseName}, '%')</if>
	<if test="status != null">HAVING `status` = #{status}</if>
	<if test="pageNumber != null and pageSize != null">LIMIT #{offSet}, #{pageSize}</if>
  </select>
</mapper>