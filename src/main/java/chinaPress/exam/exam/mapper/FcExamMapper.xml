<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chinaPress.exam.exam.dao.FcExamMapper">
	<resultMap id="BaseResultMap"
		type="chinaPress.exam.exam.model.FcExam">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="exam_name" jdbcType="VARCHAR"
			property="examName" />
		<result column="province" jdbcType="VARCHAR"
			property="province" />
		<result column="city" jdbcType="VARCHAR" property="city" />
		<result column="area" jdbcType="VARCHAR" property="area" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="signup_id" jdbcType="INTEGER"
			property="signupId" />
		<result column="signup_area_id" jdbcType="INTEGER"
			property="signupAreaId" />
		<result column="exam_type" jdbcType="INTEGER"
			property="examType" />
		<result column="exam_form" jdbcType="INTEGER"
			property="examForm" />
		<result column="exam_form_id" jdbcType="INTEGER"
			property="examFormId" />
		<result column="start_time" jdbcType="TIMESTAMP"
			property="startTime" />
		<result column="end_time" jdbcType="TIMESTAMP"
			property="endTime" />
		<result column="course_id" jdbcType="INTEGER"
			property="courseId" />
		<result column="group_id" jdbcType="INTEGER" property="groupId" />
		<result column="again_type" jdbcType="INTEGER"
			property="againType" />
		<result column="again_price" jdbcType="DECIMAL"
			property="againPrice" />
		<result column="grade" jdbcType="VARCHAR" property="grade" />
		<result column="pass_comment" jdbcType="VARCHAR"
			property="passComment" />
		<result column="fail_comment" jdbcType="VARCHAR"
			property="failComment" />
		<result column="create_id" jdbcType="INTEGER"
			property="createId" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="update_id" jdbcType="INTEGER"
			property="updateId" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, exam_name, province, city, area, address, signup_id, signup_area_id,
		exam_type, exam_form_id,
		exam_form, start_time, end_time, course_id, group_id, again_type, again_price,
		grade,
		pass_comment, fail_comment, create_id, create_time, update_id, update_time
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from fc_exam
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from fc_exam
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="chinaPress.exam.exam.model.FcExam">
		insert into fc_exam (id, exam_name, province,
		city, area, address, exam_form_id,
		signup_id, signup_area_id, exam_type,
		exam_form, start_time, end_time,
		course_id, group_id, again_type,
		again_price, grade, pass_comment,
		fail_comment, create_id, create_time,
		update_id, update_time)
		values (#{id,jdbcType=INTEGER}, #{examName,jdbcType=VARCHAR},
		#{province,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{examFormId},
		#{signupId,jdbcType=INTEGER}, #{signupAreaId,jdbcType=INTEGER},
		#{examType,jdbcType=INTEGER},
		#{examForm,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
		#{courseId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER},
		#{againType,jdbcType=INTEGER},
		#{againPrice,jdbcType=DECIMAL}, #{grade,jdbcType=VARCHAR}, #{passComment,jdbcType=VARCHAR},
		#{failComment,jdbcType=VARCHAR}, #{createId,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="chinaPress.exam.exam.model.FcExam"
		useGeneratedKeys="true" keyProperty="id">
		insert into fc_exam
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="examName != null">
				exam_name,
			</if>
			<if test="province != null">
				province,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="area != null">
				area,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="signupId != null">
				signup_id,
			</if>
			<if test="signupAreaId != null">
				signup_area_id,
			</if>
			<if test="examType != null">
				exam_type,
			</if>
			<if test="examForm != null">
				exam_form,
			</if>
			<if test="examFormId != null">
				exam_form_id,
			</if>
			<if test="startTime != null">
				start_time,
			</if>
			<if test="endTime != null">
				end_time,
			</if>
			<if test="courseId != null">
				course_id,
			</if>
			<if test="groupId != null">
				group_id,
			</if>
			<if test="againType != null">
				again_type,
			</if>
			<if test="againPrice != null">
				again_price,
			</if>
			<if test="grade != null">
				grade,
			</if>
			<if test="passComment != null">
				pass_comment,
			</if>
			<if test="failComment != null">
				fail_comment,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateId != null">
				update_id,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="examName != null">
				#{examName,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				#{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="area != null">
				#{area,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="signupId != null">
				#{signupId,jdbcType=INTEGER},
			</if>
			<if test="signupAreaId != null">
				#{signupAreaId,jdbcType=INTEGER},
			</if>
			<if test="examType != null">
				#{examType,jdbcType=INTEGER},
			</if>
			<if test="examForm != null">
				#{examForm,jdbcType=INTEGER},
			</if>
			<if test="examFormId != null">
				#{examFormId},
			</if>
			<if test="startTime != null">
				#{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				#{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="courseId != null">
				#{courseId,jdbcType=INTEGER},
			</if>
			<if test="groupId != null">
				#{groupId,jdbcType=INTEGER},
			</if>
			<if test="againType != null">
				#{againType,jdbcType=INTEGER},
			</if>
			<if test="againPrice != null">
				#{againPrice,jdbcType=DECIMAL},
			</if>
			<if test="grade != null">
				#{grade,jdbcType=VARCHAR},
			</if>
			<if test="passComment != null">
				#{passComment,jdbcType=VARCHAR},
			</if>
			<if test="failComment != null">
				#{failComment,jdbcType=VARCHAR},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateId != null">
				#{updateId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="chinaPress.exam.exam.model.FcExam">
		update fc_exam
		<set>
			<if test="examName != null">
				exam_name = #{examName,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				province = #{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="area != null">
				area = #{area,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="signupId != null">
				signup_id = #{signupId,jdbcType=INTEGER},
			</if>
			<if test="signupAreaId != null">
				signup_area_id = #{signupAreaId,jdbcType=INTEGER},
			</if>
			<if test="examType != null">
				exam_type = #{examType,jdbcType=INTEGER},
			</if>
			<if test="examForm != null">
				exam_form = #{examForm,jdbcType=INTEGER},
			</if>
			<if test="examFormId != null">
				exam_form_id = #{examFormId},
			</if>
			<if test="startTime != null">
				start_time = #{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				end_time = #{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="courseId != null">
				course_id = #{courseId,jdbcType=INTEGER},
			</if>
			<if test="groupId != null">
				group_id = #{groupId,jdbcType=INTEGER},
			</if>
			<if test="againType != null">
				again_type = #{againType,jdbcType=INTEGER},
			</if>
			<if test="againPrice != null">
				again_price = #{againPrice,jdbcType=DECIMAL},
			</if>
			<if test="grade != null">
				grade = #{grade,jdbcType=VARCHAR},
			</if>
			<if test="passComment != null">
				pass_comment = #{passComment,jdbcType=VARCHAR},
			</if>
			<if test="failComment != null">
				fail_comment = #{failComment,jdbcType=VARCHAR},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateId != null">
				update_id = #{updateId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="chinaPress.exam.exam.model.FcExam">
		update fc_exam
		set exam_name = #{examName,jdbcType=VARCHAR},
		province = #{province,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		area = #{area,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		signup_id = #{signupId,jdbcType=INTEGER},
		signup_area_id = #{signupAreaId,jdbcType=INTEGER},
		exam_type = #{examType,jdbcType=INTEGER},
		exam_form = #{examForm,jdbcType=INTEGER},
		start_time = #{startTime,jdbcType=TIMESTAMP},
		end_time = #{endTime,jdbcType=TIMESTAMP},
		course_id = #{courseId,jdbcType=INTEGER},
		group_id = #{groupId,jdbcType=INTEGER},
		again_type = #{againType,jdbcType=INTEGER},
		again_price = #{againPrice,jdbcType=DECIMAL},
		grade = #{grade,jdbcType=VARCHAR},
		pass_comment = #{passComment,jdbcType=VARCHAR},
		fail_comment = #{failComment,jdbcType=VARCHAR},
		create_id = #{createId,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_id = #{updateId,jdbcType=INTEGER},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<resultMap type="chinaPress.exam.exam.vo.FcExamManageDetailVo" id="fcExamManageDetailResultMap">
		<id column="id" property="id" />
		<result column="exam_name" property="name" />
		<result column="province" property="province" />
		<result column="city" property="city" />
		<result column="area" property="district" />
		<result column="address" property="address" />
		<result column="signupId" property="signupId" />
		<result column="signupName" property="signupName" />
		<result column="paperId" property="paperId" />
		<result column="paper_name" property="paperName" />
		<result column="grade" property="grade" />
		<result column="pass_comment" property="passComment" />
		<result column="fail_comment" property="failComment" />
		<collection property="areaList" ofType="chinaPress.exam.exam.vo.FcExamManageDetailAreaVo">
			<id column="examSignupAreaId" property="examSignupAreaId" />
			<result column="examSignupAreaProvince" property="province" />
			<result column="examSignupAreaCity" property="city" />
			<result column="examSignupAreaDistrict" property="district" />
			<result column="examSignupAreaAddress" property="address" />
			<result column="examSignupAreaStartTime" property="startTime" />
			<result column="examSignupAreaEndTime" property="endTime" />
			<result column="examSignupAreaCourseName" property="courseName" />
			<result column="examSignupAreaExamform" property="examForm" />
		</collection>
		<collection property="userList" ofType="chinaPress.exam.exam.vo.FcExamManageDetailUserVo">
			<id column="examUserId" property="examUserId" />
			<result column="examSignupUserId" property="examSignupUserId" />
			<result column="examSignupUserProvince" property="province" />
			<result column="examSignupUserCity" property="city" />
			<result column="examSignupUserDistrict" property="district" />
			<result column="examSignupUserAddress" property="address" />
			<result column="examSignupUserStartTime" property="startTime" />
			<result column="examSignupUserEndTime" property="endTime" />
			
			<result column="examSignupUserUserName" property="userName" />
			<result column="examSignupUserEducation" property="education" />
			<result column="examSignupUserTellPhone" property="tellPhone" />
			<result column="examSignupUserCertificateNumber" property="certificateNumber" />
<!-- 			<result column="" property="againCount" /> -->
		</collection>
	</resultMap>
	
	<!-- 后台管理端查询考试设置详情 -->
	<select id="selectFcExamDetail" resultMap="fcExamManageDetailResultMap">
		select
			a.id, a.exam_name, 
			a.province, a.city, a.area, a.address,
			d.id signupId, d.signup_name signupName,
			
			e.id examSignupAreaId, k.name examSignupAreaProvince, l.name examSignupAreaCity, m.name examSignupAreaDistrict, 
			q.address examSignupAreaAddress, q.start_time examSignupAreaStartTime, q.end_time examSignupAreaEndTime, 
			a.exam_form examSignupAreaExamform, j.name examSignupAreaCourseName, 
			
			f.id examUserId, g.id examSignupUserId, n.name examSignupUserProvince, o.name examSignupUserCity, 
			p.name examSignupUserDistrict, i.address examSignupUserAddress, 
			i.start_time examSignupUserStartTime, i.end_time examSignupUserEndTime, 
			g.user_name examSignupUserUserName, g.education examSignupUserEducation, 
			g.tell_phone examSignupUserTellPhone, g.certificate_number examSignupUserCertificateNumber,
			
			c.id paperId, c.paper_name,
			a.grade, a.pass_comment, a.fail_comment
		from
			fc_exam a
			inner join fc_exam_paper b on a.id = b.exam_id
			inner join fc_paper c on c.id = b.paper_id
			inner join fc_exam_signup d on a.signup_id = d.id
			
			
			inner join fc_exam_area e on e.exam_id = a.id
			inner join fc_exam_signup_area q on q.id = e.exam_signup_area_id
			
			inner join fc_exam_user f on a.id = f.exam_id
			inner join fc_exam_signup_user g on f.signup_user_id = g.id
			inner join fc_exam_signup h on g.signup_id = h.id
			inner join fc_exam_signup_area i on h.id = i. signup_id
			inner join fc_course_archives j on d.course_id = j.id
			
			left join fc_province_city_district k on k.code = q.province
			left join fc_province_city_district l on l.code = q.city
			left join fc_province_city_district m on m.code = q.area
			
			left join fc_province_city_district n on n.code = i.province
			left join fc_province_city_district o on o.code = i.city
			left join fc_province_city_district p on p.code = i.area
		where
			a.id = #{id}
	</select>
	
	<!-- 根据考试报名关联的考试设置 -->
	<select id="selectFcExamBySignup" resultMap="BaseResultMap">
		select
			a.*
		from
			fc_exam a
			inner join fc_exam_area b on a.id = b.exam_id
			inner join fc_exam_user d on a.id = d.exam_id
		where
			a.signup_id = #{signupId}
			and b.exam_signup_area_id = #{signupAreaId}
			and d.signup_user_id = #{signupUserId}
	</select>
	
	<!-- 查询考试设置列表 -->
	<select id="selectFcExamCount" resultType="int">
		select
			count(*)
		from
			fc_exam
		where
			1 = 1
			<if test="name != null and name != ''">
				and exam_name like concat('%', #{name}, '%')
			</if>
			<if test="type != null">
				and exam_type = #{type}
			</if>
	</select>
	
	<resultMap type="chinaPress.exam.exam.vo.FcExamManageListVo" id="selectFcExamListResultMap">
		<id column="id" property="id" />
		<result column="exam_name" property="name" />
		<result column="typeName" property="typeName" />
		<result column="formName" property="formName" />
		<collection property="areaList" ofType="chinaPress.exam.exam.vo.FcExamManageListAreaVo">
			<id column="exam_area_id" property="id" />
			<result column="province" property="province" />
			<result column="city" property="city" />
			<result column="district" property="district" />
			<result column="start_time" property="startTime" />
		</collection>
	</resultMap>
	
	<!-- 查询考试设置列表 -->
	<select id="selectFcExamList" resultMap="selectFcExamListResultMap">
		select
			t.id, t.exam_name, case t.exam_type when 1 then '自测' when 2 then '认证考试' end typeName,
			case t.exam_form when 1 then '关联课程' when 2 then '关联分组' else '-' end formName,
			i.id exam_area_id, c.name province, d.name city, e.name district, 
			l.start_time
		from (
			select
				*
			from
				fc_exam
			where
				1 = 1
			limit
				#{offset}, #{rows}
		) t
		left join fc_exam_area i on t.id = i.exam_id
		left join fc_exam_signup_area l on i.exam_signup_area_id = l.id
		left join fc_province_city_district c on c.code = l.province
		left join fc_province_city_district d on d.code = l.city
		left join fc_province_city_district e on e.code = l.area
		where
			1 = 1
			<if test="name != null and name != ''">
				and t.exam_name like concat('%', #{name}, '%')
			</if>
			<if test="type != null">
				and t.exam_type = #{type}
			</if>
	</select>
</mapper>