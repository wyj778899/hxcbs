<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="chinaPress.role.comment.dao.FcCommentInfoMapper">
	<resultMap id="BaseResultMap"
		type="chinaPress.role.comment.model.FcCommentInfo">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="type" property="type" />
		<result column="section_id" jdbcType="INTEGER"
			property="sectionId" />
		<result column="is_anonymous" jdbcType="INTEGER"
			property="isAnonymous" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="role_id" jdbcType="INTEGER" property="roleId" />
		<result column="role_type" jdbcType="INTEGER"
			property="roleType" />
		<result column="receive_id" jdbcType="INTEGER"
			property="receiveId" />
		<result column="receive_role_type" jdbcType="INTEGER"
			property="receiveRoleType" />
		<result column="status" jdbcType="INTEGER"
			property="status" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="create_id" jdbcType="INTEGER"
			property="createId" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="update_id" jdbcType="INTEGER"
			property="updateId" />
	</resultMap>
	<sql id="Base_Column_List">
		id, section_id, is_anonymous, content, role_id, role_type,
		receive_id, type, status,
		receive_role_type,
		create_time, create_id, update_time,
		update_id
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from fc_comment
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from fc_comment
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insertSelective"
		parameterType="chinaPress.role.comment.model.FcCommentInfo">
		insert into fc_comment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="sectionId != null">
				section_id,
			</if>
			<if test="isAnonymous != null">
				is_anonymous,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleType != null">
				role_type,
			</if>
			<if test="receiveId != null">
				receive_id,
			</if>
			<if test="receiveRoleType != null">
				receive_role_type,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateId != null">
				update_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type},
			</if>
			<if test="sectionId != null">
				#{sectionId,jdbcType=INTEGER},
			</if>
			<if test="isAnonymous != null">
				#{isAnonymous,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="roleType != null">
				#{roleType,jdbcType=INTEGER},
			</if>
			<if test="receiveId != null">
				#{receiveId,jdbcType=INTEGER},
			</if>
			<if test="receiveRoleType != null">
				#{receiveRoleType,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateId != null">
				#{updateId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="chinaPress.role.comment.model.FcCommentInfo">
		update fc_comment
		<set>
			<if test="type != null">
				type = #{type},
			</if>
			<if test="sectionId != null">
				section_id = #{sectionId,jdbcType=INTEGER},
			</if>
			<if test="isAnonymous != null">
				is_anonymous = #{isAnonymous,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="roleType != null">
				role_type = #{roleType,jdbcType=INTEGER},
			</if>
			<if test="receiveId != null">
				receive_id = #{receiveId,jdbcType=INTEGER},
			</if>
			<if test="receiveRoleType != null">
				receive_role_type = #{receiveRoleType,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateId != null">
				update_id = #{updateId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 后台管理系统查看评论 -->
	<select id="selectManageFcCommentCount" resultType="int">
		select
			count(*)
		from
			fc_comment a
			inner join role_staff_archives b on a.role_id = b.role_id and a.role_type = b.role_type
		where
			1 = 1
			<if test="userName != null and userName != ''">
				and b.user_name like concat('%', #{userName}, '%')
			</if>
			<if test="tellPhone != null and tellPhone != ''">
				and b.tell_phone like concat('%', #{tellPhone}, '%')
			</if>
			<if test="status != null">
				and a.status = #{status}
			</if>
	</select>
	
	<!-- 后台管理系统查看评论 -->
	<select id="selectManageFcCommentList" resultType="chinaPress.role.comment.vo.FcCommentListVo">
		select
			a.id, b.user_name userName, case a.role_type when 1 then '员工' when 2 then '机构'
			when 3 then '家长' when 4 then '从业者' when 5 then '注册用户' end roleTypeName,
			b.tell_phone tellPhone, a.content, case a.status when 1 then '已审核' when 0 then '未审核' end statusName
		from
			fc_comment a
			inner join role_staff_archives b on a.role_id = b.role_id and a.role_type = b.role_type
		where
			1 = 1
			<if test="userName != null and userName != ''">
				and b.user_name like concat('%', #{userName}, '%')
			</if>
			<if test="tellPhone != null and tellPhone != ''">
				and b.tell_phone like concat('%', #{tellPhone}, '%')
			</if>
			<if test="status != null">
				and a.status = #{status}
			</if>
		order by
			a.create_time desc
		limit
			#{offset}, #{rows}
	</select>
	
	<!-- 查看评论详情 -->
	<select id="selectManageFcCommentDetail" resultType="chinaPress.role.comment.vo.FcCommentListVo">
		select
			a.id, b.user_name userName, case a.role_type when 1 then '员工' when 2 then '机构'
			when 3 then '家长' when 4 then '从业者' when 5 then '注册用户' end roleTypeName,
			b.tell_phone tellPhone, a.content, case a.status when 1 then '已审核' when 0 then '未审核' end statusName
		from
			fc_comment a
			inner join role_staff_archives b on a.role_id = b.role_id and a.role_type = b.role_type
		where
			a.id = #{id}
	</select>
</mapper>