<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chinaPress.role.member.dao.PractitionerInfoMapper">
  <resultMap id="BaseResultMap" type="chinaPress.role.member.model.PractitionerInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tell_phone" jdbcType="VARCHAR" property="tellPhone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="certificate_number" jdbcType="VARCHAR" property="certificateNumber" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="certificate_type" jdbcType="INTEGER" property="certificateType" />
    <result column="post" jdbcType="VARCHAR" property="post" />
    <result column="work_year" jdbcType="INTEGER" property="workYear" />
    <result column="census_address" jdbcType="VARCHAR" property="censusAddress" />
    <result column="institution_address" jdbcType="VARCHAR" property="institutionAddress" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    
    <result column="provice" jdbcType="VARCHAR" property="provice" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="is_individual" jdbcType="INTEGER" property="isIndividual" />
    <result column="institution_id" jdbcType="INTEGER" property="institutionId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="enterprise_code" jdbcType="VARCHAR" property="enterpriseCode" />
    <result column="institution_name" jdbcType="VARCHAR" property="institutionName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="birthday_time" jdbcType="TIMESTAMP" property="birthdayTime" />
    <result column="user_head" jdbcType="VARCHAR" property="userHead" />
    
    <result column="ethnic" jdbcType="VARCHAR" property="ethnic" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="mailing_address" jdbcType="VARCHAR" property="mailingAddress" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
  </resultMap>
  
  <resultMap id="certMap" type="chinaPress.role.member.vo.TeacherAndCertVo">
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="srouce" jdbcType="VARCHAR" property="srouce" />
    <result column="certificateNumber" jdbcType="VARCHAR" property="certificateNumber" />
   	<collection property="certs" ofType="chinaPress.role.member.vo.CertVo">
	  	   <id column="id" jdbcType="INTEGER" property="id" />
	  	   <result column="photo" jdbcType="VARCHAR" property="photo" />
	       <result column="code" jdbcType="VARCHAR" property="code" />
	       <result column="grade" jdbcType="VARCHAR" property="grade" />
	</collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, `password`, `name`, tell_phone, email, certificate_number, sex, provice, 
    city, area, address, `type`, is_individual, institution_id, `state`, create_id, create_time, 
    update_id, update_time, enterprise_code,institution_name,real_name,birthday_time,user_head
    , age, certificate_type, post, work_year, census_address, institution_address, education
    , ethnic, native_place, mailing_address,grade
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_practitioner_archives
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 查询报名人员信息 -->
  <select id="findApplyInfo" resultType="chinaPress.role.member.vo.PractitionerApplyInfoVo">
  	SELECT
		a.user_name AS userName,
		a.`name`,
		a.sex,
		a.tell_phone AS tellPhone,
		a.certificate_number AS certificateNumber,
		a.post,
		a.work_year AS workYear,
	CASE
			a.type 
			WHEN 1 THEN
			a.institution_address 
			WHEN 2 THEN
			(CASE WHEN a.institution_id !=NULL AND a.institution_id !=''
            THEN CONCAT( b.business_provice, b.business_city, b.business_area, b.business_address )
						ELSE a.institution_address END)
		END AS institutionAddress,
		a.education,
		a.type,
	CASE
			a.type 
			WHEN 1 THEN
			a.institution_name 
			WHEN 2 THEN
			(CASE WHEN a.institution_id !=NULL AND a.institution_id !=''
            THEN b.`name`
						ELSE a.institution_address END)
		END AS institutionName,
		a.ethnic AS ethnic,
		a.native_place AS nativePlace,
		a.mailing_address AS mailingAddress
	FROM
		role_practitioner_archives a
		LEFT JOIN role_institution_archives b ON b.id = a.institution_id 
	WHERE
		a.id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectPractitionerParents" parameterType="chinaPress.role.member.model.PractitionerInfo" resultType="chinaPress.role.member.vo.PractitionerParent">
    select 
     	b.id as id,
     	a.name as name,
     	a.tell_phone as tellPhone,
     	a.email as email,
     	a.certificate_number as certificateNumber,
     	a.sex as sex
    from role_practitioner_archives a,
         role_staff_archives b
    where a.state = 1 and 				<!-- 家长/从业者状态 -->
          a.type = 1 and  				<!-- 1代表家长，2代表从业者 -->
          a.id = b.role_id 				<!-- 连接条件 --> 
	     <if test="name !=null and name !=''">
	        and a.name like CONCAT('%',#{name},'%')
	     </if>
      	 <if test="certificateNumber !=null and certificateNumber !=''">
        	and a.certificate_number like CONCAT('%',#{certificateNumber},'%')
      	 </if>
      	 <if test="tellPhone !=null and tellPhone !=''">
        	and a.tell_phone like CONCAT('%',#{tellPhone},'%')
      	 </if>
     order by b.create_time desc
     limit #{page} , #{limit}
  </select>
  
  <select id="selectPractitionerEmps" parameterType="chinaPress.role.member.model.PractitionerInfo" resultType="chinaPress.role.member.vo.PractitionerEmps">
    select 
     	b.id as id,
     	a.name as name,
     	a.tell_phone as tellPhone,
     	a.email as email,
     	a.certificate_number as certificateNumber,
     	a.address as address
    from role_practitioner_archives a,
         role_staff_archives b
    where a.state = 1 and 				<!-- 家长/从业者状态 -->
          a.type = 2 and  				<!-- 1代表家长，2代表从业者 -->
          a.id = b.role_id 				<!-- 连接条件 --> 
	     <if test="name !=null and name !=''">
	        and a.name like CONCAT('%',#{name},'%')
	     </if>
      	 <if test="certificateNumber !=null and certificateNumber !=''">
        	and a.certificate_number like CONCAT('%',#{certificateNumber},'%')
      	 </if>
      	 <if test="tellPhone !=null and tellPhone !=''">
        	and a.tell_phone like CONCAT('%',#{tellPhone},'%')
      	 </if>
     order by b.create_time desc
     limit #{page} , #{limit}
  </select>
  
  <select id="selectCount" parameterType="chinaPress.role.member.model.PractitionerInfo" resultType="java.lang.Integer">
    select count(*)
    from role_practitioner_archives a,
    	 role_staff_archives b
    where a.state = 1 and
          a.id = b.role_id
    	 <if test="name !=null and name !=''">
	        and a.name like CONCAT('%',#{name},'%')
	     </if>
      	 <if test="certificateNumber !=null and certificateNumber !=''">
        	and a.certificate_number like CONCAT('%',#{certificateNumber},'%')
      	 </if>
      	 <if test="tellPhone !=null and tellPhone !=''">
        	and a.tell_phone like CONCAT('%',#{tellPhone},'%')
      	 </if>
      	 <if test="type !=null and type !=''">
        	and a.type = #{type}
      	 </if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role_practitioner_archives
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insertSelective" parameterType="chinaPress.role.member.model.PractitionerInfo"
  	useGeneratedKeys="true" keyProperty="id">
    insert into role_practitioner_archives
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userHead != null">
        user_head,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="tellPhone != null">
        tell_phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="certificateNumber != null">
        certificate_number,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="provice != null">
        provice,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="isIndividual != null">
        is_individual,
      </if>
      <if test="institutionId != null">
        institution_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="enterpriseCode != null">
        enterprise_code,
      </if>
      <if test="birthdayTime != null">
        birthday_time,
      </if>
      <if test="institutionName != null">
        institution_name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="age != null">
      	age,
      </if>
      <if test="certificateType != null">
      	certificate_type,
      </if>
      <if test="post != null">
      	post,
      </if>
      <if test="workYear != null">
      	work_year,
      </if>
      <if test="censusAddress != null">
      	census_address,
      </if>
      <if test="institutionAddress != null">
      	institution_address,
      </if>
      <if test="education != null">
      	education,
      </if>
	   	<if test="ethnic != null">
	   		ethnic,
	   	</if>
	   	<if test="nativePlace != null">
	   		native_place,
	   	</if>
	   	<if test="mailingAddress != null">
	   		mailing_address,
	   	</if>
	   	<if test="grade != null">
	   		grade,
	   	</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tellPhone != null">
        #{tellPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null">
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="provice != null">
        #{provice,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="isIndividual != null">
        #{isIndividual,jdbcType=INTEGER},
      </if>
      <if test="institutionId != null">
        #{institutionId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enterpriseCode != null">
        #{enterpriseCode,jdbcType=VARCHAR},
      </if>
      <if test="birthdayTime != null">
        #{birthdayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="institutionName != null">
        #{institutionName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
      	#{age},
      </if>
      <if test="certificateType != null">
      	#{certificateType},
      </if>
      <if test="post != null">
      	#{post},
      </if>
      <if test="workYear != null">
      	#{workYear},
      </if>
      <if test="censusAddress != null">
      	#{censusAddress},
      </if>
      <if test="institutionAddress != null">
      	#{institutionAddress},
      </if>
      <if test="education != null">
      	#{education},
      </if>
      <if test="ethnic != null">
	   		#{ethnic},
   	  </if>
   	  <if test="nativePlace != null">
   		    #{nativePlace},
   	  </if>
   	  <if test="mailingAddress != null">
   		    #{mailingAddress},
   	  </if>
      <if test="grade != null">
            #{grade,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" keyProperty="id">
          SELECT LAST_INSERT_ID()
    </selectKey>	
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="chinaPress.role.member.model.PractitionerInfo">
    update role_practitioner_archives
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
       <if test="userHead != null">
        user_head = #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tellPhone != null">
        tell_phone = #{tellPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null">
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="provice != null">
        provice = #{provice,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="isIndividual != null">
        is_individual = #{isIndividual,jdbcType=INTEGER},
      </if>
      <if test="institutionId != null">
        institution_id = #{institutionId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enterpriseCode != null">
        enterprise_code = #{enterpriseCode,jdbcType=VARCHAR},
      </if>
       <if test="birthdayTime != null">
        birthday_time = #{birthdayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="institutionName != null">
        institution_name = #{institutionName,jdbcType=VARCHAR},
      </if>
       <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
      	age = #{age},
      </if>
      <if test="certificateType != null">
      	certificate_type = #{certificateType},
      </if>
      <if test="post != null">
      	post = #{post},
      </if>
      <if test="workYear != null">
      	work_year = #{workYear},
      </if>
      <if test="censusAddress != null">
      	census_address = #{censusAddress},
      </if>
      <if test="institutionAddress != null">
      	institution_address = #{institutionAddress},
      </if>
      <if test="education != null">
      	education = #{education},
      </if>
      <if test="ethnic != null">
	   		ethnic = #{ethnic},
	  </if>
	  <if test="nativePlace != null">
	   		native_place = #{nativePlace},
	  </if>
	  <if test="mailingAddress != null">
	   		mailing_address = #{mailingAddress},
	  </if>
	  <if test="grade != null">
	   		grade = #{grade},
	  </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 查询教师成绩信息 -->
  <select id="selectTeacherAndScore" parameterType="chinaPress.role.member.model.PractitionerInfo" resultType="chinaPress.role.member.vo.TeacherScoreVo">
	select
		name as name,
		certificate_number as certificateNumber,
		grade as score,
		user_head as photo
	from
		role_practitioner_archives
	where type = 2    <!-- 只查询从业者 -->
		<if test="name !=null and name !=''">
	   		and name like CONCAT('%',#{name},'%')
	    </if>
	    <if test="certificateNumber !=null and certificateNumber !=''">
	   		and certificate_number like CONCAT('%',#{certificateNumber},'%')
	    </if>
	limit #{page} , #{limit}    
  </select>
  
  <!-- 查询教师成绩信息个数 -->
  <select id="selectTeacherAndScoreCount" parameterType="chinaPress.role.member.model.PractitionerInfo" resultType="java.lang.Integer">
	select
		count(*)
	from
		role_practitioner_archives
	where type = 2    <!-- 只查询从业者 -->
		<if test="name !=null and name !=''">
	   		and name like CONCAT('%',#{name},'%')
	    </if>
	    <if test="certificateNumber !=null and certificateNumber !=''">
	   		and certificate_number like CONCAT('%',#{certificateNumber},'%')
	    </if>
  </select>
  
  <!-- 查询教师证书信息 如果教师没有证书则不显示数据-->
  <select id="selectTeacherAndCert" parameterType="chinaPress.role.member.model.PractitionerInfo" resultType="chinaPress.role.member.vo.TeacherCertVo">
	select
		a.name as name,
		a.certificate_number as certificateNumber,
		b.code as certCode,
		b.photo as certPhoto
	from 
		role_practitioner_archives a,
		fc_certificate_archives b
	where a.id = b.role_id and a.type = 2    <!-- 只查询从业者 -->
		<if test="name !=null and name !=''">
	   		and a.name like CONCAT('%',#{name},'%')
	    </if>
	    <if test="certificateNumber !=null and certificateNumber !=''">
	   		and 
	   		(	a.certificate_number like CONCAT('%',#{certificateNumber},'%')
	   			or b.code like CONCAT('%',#{certificateNumber},'%')
	   		)
	    </if>
	limit #{page} , #{limit}    
  </select>
  
  <!-- 查询教师成绩证书个数 -->
  <select id="selectTeacherAndCertCount" parameterType="chinaPress.role.member.model.PractitionerInfo" resultType="java.lang.Integer">
	select
		count(*)
	from
		role_practitioner_archives a,
		fc_certificate_archives b
	where a.id = b.role_id and a.type = 2    <!-- 只查询从业者 -->
		<if test="name !=null and name !=''">
	   		and a.name like CONCAT('%',#{name},'%')
	    </if>
	    <if test="certificateNumber !=null and certificateNumber !=''">
	   		and 
	   		(	a.certificate_number like CONCAT('%',#{certificateNumber},'%')
	   			or b.code like CONCAT('%',#{certificateNumber},'%')
	   		)
	    </if>
  </select>
  
  <!-- 查询教师证书信息 一对多展示并返回-->
  <select id="selectTeacherAndCertInfos" parameterType="chinaPress.role.member.model.PractitionerInfo" resultMap="certMap">
	select
		a.name as name,
		a.certificate_number as certificateNumber,
		a.sex as sex,
		a.grade as srouce,
		b.id as id,
		b.code as code,
		b.photo as photo,
		b.grade as grade
	from 
		(select id,name,type,certificate_number,sex,grade from role_practitioner_archives
		 where type = 2
		 	 <if test="name !=null and name !=''">
	   			and name like CONCAT('%',#{name},'%')
		    </if>
		    <if test="certificateNumber !=null and certificateNumber !=''">
		   		and certificate_number like CONCAT('%',#{certificateNumber},'%')
		    </if>
		 limit #{page} , #{limit}  
		 )a,
		fc_certificate_archives b
	where a.id = b.role_id   
	     <if test="type !=null and type !=''">
	   		and b.type = #{type}
	    </if>
  </select>
  
  <!-- 查询教师成绩证书个数 -->
  <select id="selectTeacherAndCertInfosCount" parameterType="chinaPress.role.member.model.PractitionerInfo" resultType="java.lang.Integer">
	select count(*)
		from role_practitioner_archives
		 where type = 2
		 	<if test="name !=null and name !=''">
	   			and name like CONCAT('%',#{name},'%')
		    </if>
		    <if test="certificateNumber !=null and certificateNumber !=''">
		   		and certificate_number like CONCAT('%',#{certificateNumber},'%')
		    </if>
		    <!-- 教师的个数返回的必须是有证书的教师 -->
		    and id in (select DISTINCT(role_id) from fc_certificate_archives where role_type = 3)
  </select>
  
</mapper>